---
applyTo: "**/*.dart"
---

# Flutter / Dart Framework Guidelines

Follow the [Flutter Style Guide](https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo) for consistent code structure and readability.

## Directory and File Structure
- Use `lib/`, `test/`, `assets/` directories.
- One widget per file.
- Name files using snake_case (e.g., `my_widget.dart`).

## Widget Naming
- Class names: PascalCase (e.g., `MyWidget`).
- Constants: camelCase for variables, ALL_CAPS for static constants.
- Functions: camelCase.
- Avoid abbreviations.

## Code Style
- Use `const` constructors where possible.
- Prefer `final` over `var` when variables are not reassigned.
- Use trailing commas for multi-line widgets to improve formatting.
- Add DartDoc comments in English (main), 日本語 / 中文 / 한국어 (supplement).

## State Management
- Use Provider, Riverpod, or Bloc consistently per project.
- Clearly separate UI and business logic.

## Testing
- Use `flutter_test` package.
- Name test files as `*_test.dart`.
- Write tests for all major widgets and logic.

## AI Assistance
- Copilot can scaffold widgets and generate boilerplate code.
- Human review is required for logic correctness, widget hierarchy, and naming conventions.

## Comments
- Main language: English
- Supplement: 日本語 / 中文 / 한국어
